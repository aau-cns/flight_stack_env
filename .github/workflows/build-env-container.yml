# Copyright (C) 2023 Martin Scheiber,
# Control of Networked Systems, University of Klagenfurt, Austria.
#
# All rights reserved.
#
# This software is licensed under the terms of the BSD-2-Clause-License with
# no commercial use allowed, the full terms of which are made available
# in the LICENSE file. No license in patents is granted.
#
# You can contact the author at <martin.scheiber@ieee.org>.

name: Skiff Container Build

on:
  push:
    branches: [ "main", "develop" ]
    paths:
      - 'common/rootfs_part/coreenv/flightstack/**'
      - '.github/workflows/build-env-container.yml'

jobs:
  build_container_latest:
    name: Build Flightstack Container (main - ${{ matrix.UNIX_SHORT }}_${{ matrix.ROS_DISTRO }})
    if: ${{ github.ref_name == 'main' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ROS_DISTRO: [noetic, melodic]
        UNIX_BASE:
          - ubuntu:bionic
          - ubuntu:focal
          - skiffos/skiff-core-linux4tegra:latest
        include:
          - UNIX_BASE: ubuntu:bionic
            UNIX_SHORT: ubionic
            PLATFORMS: "linux/amd64,linux/arm64,linux/arm/v7"
          - UNIX_BASE: ubuntu:focal
            UNIX_SHORT: ufocal
            PLATFORMS: "linux/amd64,linux/arm64,linux/arm/v7"
          - UNIX_BASE: skiffos/skiff-core-linux4tegra:latest
            UNIX_SHORT: jetson
            PLATFORMS: "linux/arm/v7"
        exclude:
          - UNIX_BASE: ubuntu:bionic
            ROS_DISTRO: noetic
          - UNIX_BASE: skiffos/skiff-core-linux4tegra:latest
            ROS_DISTRO: melodic
    env:
      IMAGE_URL: ${{ secrets.GITLAB_REGISTRY_IMAGE_URL }}
      IMAGE_NAME: flight_stack
      COMMIT_HASH: ${{ github.sha }}
      LATEST_ROS: noetic
      LATEST_UNIX: ubuntu:focal
      GIT_VERSION: 1.0.0-rc1
    steps:
      - name: Get current date
        id: date
        run: echo "date=$(date '+%F-%H-%M-%S')" >> $GITHUB_OUTPUT

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Registry
        env:
          DOCKER_USER: ${{secrets.GITLAB_REGISTRY_USER}}
          DOCKER_PASSWORD: ${{secrets.GITLAB_REGISTRY_PASSWORD}}
          DOCKER_URL: ${{secrets.GITLAB_REGISTRY_URL}}
        run: |
          docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD} ${DOCKER_URL}

      - name: Build Base Image (latest)
        if: ${{ matrix.ROS_DISTRO == env.LATEST_ROS && matrix.UNIX_BASE == env.LATEST_UNIX }}
        env:
          BUILD_TIMESTAMP: ${{ steps.date.outputs.date }}
        run: >
             docker buildx build \
               --platform=${{ matrix.PLATFORMS }} \
               --tag ${IMAGE_URL}/${IMAGE_NAME}_base:latest \
               --tag ${IMAGE_URL}/${IMAGE_NAME}_base:${COMMIT_HASH::6} \
               --tag ${IMAGE_URL}/${IMAGE_NAME}_base:${{ matrix.UNIX_SHORT }}_${{ matrix.ROS_DISTRO }} \
               --build-arg VERSION="${GIT_VERSION}" \
               --build-arg BUILD_TIMESTAMP="${BUILD_TIMESTAMP}" \
               --build-arg ROS_BUILD_DISTRO="${{ matrix.ROS_DISTRO }}" \
               --build-arg UNIX_BASE="${{ matrix.UNIX_BASE }}" \
               --compress --force-rm --push \
               -f ./common/rootfs_part/coreenv/flightstack/Dockerfile.base \
               ./common/rootfs_part/coreenv/flightstack/

      - name: Build Skiff Image (latest)
        if: ${{ matrix.ROS_DISTRO == env.LATEST_ROS && matrix.UNIX_BASE == env.LATEST_UNIX }}
        env:
          BUILD_TIMESTAMP: ${{ steps.date.outputs.date }}
        run: >
             docker buildx build \
               --platform=${{ matrix.PLATFORMS }} \
               --tag ${IMAGE_URL}/${IMAGE_NAME}:latest \
               --tag ${IMAGE_URL}/${IMAGE_NAME}:${COMMIT_HASH::6} \
               --tag ${IMAGE_URL}/${IMAGE_NAME}:${{ matrix.UNIX_SHORT }}_${{ matrix.ROS_DISTRO }} \
               --build-arg VERSION="${GIT_VERSION}" \
               --build-arg BUILD_TIMESTAMP="${BUILD_TIMESTAMP}" \
               --build-arg FS_TAG="latest" \
               --compress --force-rm --push \
               -f ./common/rootfs_part/coreenv/flightstack/Dockerfile \
               ./common/rootfs_part/coreenv/flightstack/

      - name: Build Base Image (${{ matrix.UNIX_BASE }} with ROS-${{ matrix.ROS_DISTRO }})
        if: ${{ matrix.ROS_DISTRO != env.LATEST_ROS || matrix.UNIX_BASE != env.LATEST_UNIX }}
        env:
          BUILD_TIMESTAMP: ${{ steps.date.outputs.date }}
        run: >
             docker buildx build \
               --platform=${{ matrix.PLATFORMS }} \
               --tag ${IMAGE_URL}/${IMAGE_NAME}_base:${{ matrix.UNIX_SHORT }}_${{ matrix.ROS_DISTRO }} \
               --build-arg VERSION="${GIT_VERSION}" \
               --build-arg BUILD_TIMESTAMP="${BUILD_TIMESTAMP}" \
               --build-arg ROS_BUILD_DISTRO="${{ matrix.ROS_DISTRO }}" \
               --build-arg UNIX_BASE="${{ matrix.UNIX_BASE }}" \
               --compress --force-rm --push \
               -f ./common/rootfs_part/coreenv/flightstack/Dockerfile.base \
               ./common/rootfs_part/coreenv/flightstack/

      - name: Build Skiff Image (${{ matrix.UNIX_BASE }} with ROS-${{ matrix.ROS_DISTRO }})
        if: ${{ matrix.ROS_DISTRO != env.LATEST_ROS || matrix.UNIX_BASE != env.LATEST_UNIX }}
        env:
          BUILD_TIMESTAMP: ${{ steps.date.outputs.date }}
        run: >
             docker buildx build \
               --platform=${{ matrix.PLATFORMS }} \
               --tag ${IMAGE_URL}/${IMAGE_NAME}:${{ matrix.UNIX_SHORT }}_${{ matrix.ROS_DISTRO }} \
               --build-arg VERSION="${GIT_VERSION}" \
               --build-arg BUILD_TIMESTAMP="${BUILD_TIMESTAMP}" \
               --build-arg ROS_BUILD_DISTRO="${{ matrix.ROS_DISTRO }}" \
               --build-arg FS_TAG="${{ matrix.UNIX_SHORT }}_${{ matrix.ROS_DISTRO }}" \
               --compress --force-rm --push \
               -f ./common/rootfs_part/coreenv/flightstack/Dockerfile \
               ./common/rootfs_part/coreenv/flightstack/

  build_container_dev:
    name: Build Flightstack Dev Container (${{ github.ref_name }})
    if: ${{ github.ref_name != 'main' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        UNIX_BASE:
          - ubuntu:focal
          - skiffos/skiff-core-linux4tegra:latest
        include:
          - UNIX_BASE: ubuntu:focal
            UNIX_SHORT: dev
            PLATFORMS: "linux/amd64,linux/arm64,linux/arm/v7"
          - UNIX_BASE: skiffos/skiff-core-linux4tegra:latest
            UNIX_SHORT: dev_jetson
            PLATFORMS: "linux/arm/v7"
    env:
      IMAGE_URL: ${{ secrets.GITLAB_REGISTRY_IMAGE_URL }}
      IMAGE_NAME: flight_stack
      COMMIT_HASH: ${{ github.sha }}
      ROS_DISTRO: noetic
      UNIX_BASE: ubuntu:focal
    steps:
      - name: Get current date
        id: date
        run: echo "date=$(date '+%F-%H-%M-%S')" >> $GITHUB_OUTPUT

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.2.1

      - name: Login to Registry
        env:
          DOCKER_USER: ${{secrets.GITLAB_REGISTRY_USER}}
          DOCKER_PASSWORD: ${{secrets.GITLAB_REGISTRY_PASSWORD}}
          DOCKER_URL: ${{secrets.GITLAB_REGISTRY_URL}}
        run: |
          docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD} ${DOCKER_URL}

      - name: Build Base Image (${{ matrix.UNIX_SHORT }})
        env:
          BUILD_TIMESTAMP: ${{ steps.date.outputs.date }}
        run: >
             docker buildx build \
               --platform=${{ matrix.PLATFORMS }} \
               --tag ${IMAGE_URL}/${IMAGE_NAME}_base:${{ matrix.UNIX_SHORT }} \
               --tag ${IMAGE_URL}/${IMAGE_NAME}_base:${COMMIT_HASH::6} \
               --build-arg VERSION="${COMMIT_HASH::6}" \
               --build-arg BUILD_TIMESTAMP="${BUILD_TIMESTAMP}" \
               --build-arg ROS_BUILD_DISTRO="${ROS_DISTRO}" \
               --build-arg UNIX_BASE="${{ matrix.UNIX_BASE }}" \
               --compress --force-rm --push \
               -f ./common/rootfs_part/coreenv/flightstack/Dockerfile.base \
               ./common/rootfs_part/coreenv/flightstack/

      - name: Build Base Image (${{ matrix.UNIX_SHORT }})
        env:
          BUILD_TIMESTAMP: ${{ steps.date.outputs.date }}
        run: >
             docker buildx build \
               --platform=${{ matrix.PLATFORMS }} \
               --tag ${IMAGE_URL}/${IMAGE_NAME}:${{ matrix.UNIX_SHORT }} \
               --tag ${IMAGE_URL}/${IMAGE_NAME}:${COMMIT_HASH::6} \
               --build-arg VERSION="${COMMIT_HASH::6}" \
               --build-arg BUILD_TIMESTAMP="${BUILD_TIMESTAMP}" \
               --build-arg FS_TAG="${{ matrix.UNIX_SHORT }}" \
               --compress --force-rm --push \
               -f ./common/rootfs_part/coreenv/flightstack/Dockerfile \
               ./common/rootfs_part/coreenv/flightstack/
